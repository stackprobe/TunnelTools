----
■コマンドライン

	HTTPProxy.exe RECV-PORT FWD-HOST FWD-PORT /S

		/S ... このオプションを指定すると既に起動している HTTPProxy.exe を安全に停止できます。
		       停止するまで時間が掛かることがあります。

	HTTPProxy.exe RECV-PORT FWD-HOST FWD-PORT [//CT CONNECT-TIMEOUT]
	                                          [/C CONNECT-MAX] [/T SOCK-TIMEOUT] [/MT MESSAGE-TIMEOUT]
	                                          [/NDT U-NO-DATA-TIMEOUT] [/NDT- D-NO-DATA-TIMEOUT]
	                                          [/M MESSAGE-MAX] [/X] [/D] [/-D] [/+C]
	                                          [/IP OK-IP-PFX]... [/-IP NG-IP-PFX]...
	                                          [/HR H-KEY H-VAL]... [/HK H-KEY]...
	                                          [/HR- H-KEY H-VAL]... [/HK- H-KEY]...
	                                          [/HR+ H-KEY H-VAL]... [/HK+ H-KEY]...
	                                          [/F FILTER-COMMAND]
	                                          [/F+ FILTER-COMMAND]
	                                          [/F- FILTER-COMMAND]

		CONNECT-TIMEOUT   ... TCP接続タイムアウト, [秒] 省略時は 20, 指定できる範囲は 1 〜 3600
		CONNECT-MAX       ... 最大接続数, 省略時 100
		SOCK-TIMEOUT      ... 通信タイムアウト [秒] 0 == 無制限, 省略時 10 日
		U-NO-DATA-TIMEOUT ... 上り無通信タイムアウト [秒] 0 == 無制限, 省略時 3 分
		D-NO-DATA-TIMEOUT ... 下り無通信タイムアウト [秒] 0 == 無制限, 省略時 5 分
		MESSAGE-TIMEOUT   ... 1回(1つ)のメッセージの送信・受信タイムアウト [秒] 0 == 無制限, 省略時 10 時間
		MESSAGE-MAX       ... メッセージバッファの最大合計サイズ, 省略時は 270 MB
		/X  ... Hostタグを見て転送先を変更する。
		/D  ... URLにスキーム・ドメインを挿入する。
		/-D ... URLからスキーム・ドメインを除去する。
		/+C ... CONNECTメソッドを許可する。(https等を許可する)
		OK-IP-PFX ... 転送先として許可するIPアドレスの開始パターン
		NG-IP-PFX ... 転送先として許可しないIPアドレスの開始パターン
		/HR  ... ヘッダフィールドの置き換え・追加 (上りのみ)
		/HK  ... ヘッダフィールドの削除           (上りのみ)
		/HR- ... ヘッダフィールドの置き換え・追加 (下りのみ)
		/HK- ... ヘッダフィールドの削除           (下りのみ)
		/HR+ ... ヘッダフィールドの置き換え・追加 (上下両方)
		/HK+ ... ヘッダフィールドの削除           (上下両方)
		/F   ... フィルターコマンド (上りのみ)
		/F+  ... フィルターコマンド (下りのみ)
		/F-  ... フィルターコマンド (上下両方)

	特殊なH-VAL

		$$ で始まる場合、先頭の $$ を除去します。

			例：  $$$100-  ->  $100-

		$H で始まる場合、３文字目以降をヘッダーフィールド名と見なし、その値に置き換えます。

			例：  $HHost  ->  stackprobe.dip.jp:8080

	フィルターコマンド

		system関数にそのまま渡せる文字列であること。
		コマンド実行時のカレントは、このプロセス実行時のカレントと同じ。
		実行時のカレントに HTTPParse_HttpDat.tmp というファイルにヘッダとボディが書き出されているので、
		これを変更すると、送受信データに反映される。

----
■制限というか問題点

	送受信データ（ヘッダとボディの組み合わせ）は、一旦すべて受信してから送信を開始します。
	なので、あまり大きな（メッセージバッファを逼迫するような）送受信データは送受信できなかったり、
	受け側の受信開始が大幅に遅れる場合があります。
